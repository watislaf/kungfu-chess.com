service: rapid-chess-online

provider:
  name: aws
  runtime: nodejs18.x
  region: ${opt:region, 'us-east-1'}
  stage: ${opt:stage, 'prod'}
  profile: 'watislaf'
  memorySize: 256
  timeout: 10
  environment:
    NODE_ENV: production
    STAGE: ${self:provider.stage}

plugins:
  - serverless-s3-sync

custom:
  s3Sync:
    - bucketName: ${self:service}-${self:provider.stage}-static
      localDir: out
      deleteRemoved: true
      params:
        - index.html:
            CacheControl: 'no-cache'
        - "*.js":
            CacheControl: 'public, max-age=31536000, immutable'
        - "*.css":
            CacheControl: 'public, max-age=31536000, immutable'
        - "*.png|*.jpg|*.jpeg|*.gif|*.webp|*.svg":
            CacheControl: 'public, max-age=31536000, immutable'

resources:
  Resources:
    # S3 Bucket for static files
    StaticSiteS3Bucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:service}-${self:provider.stage}-static
        WebsiteConfiguration:
          IndexDocument: index.html
          ErrorDocument: index.html
        PublicAccessBlockConfiguration:
          BlockPublicAcls: false
          BlockPublicPolicy: false
          IgnorePublicAcls: false
          RestrictPublicBuckets: false

    # S3 Bucket Policy
    StaticSiteS3BucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket: !Ref StaticSiteS3Bucket
        PolicyDocument:
          Statement:
            - Sid: PublicReadGetObject
              Effect: Allow
              Principal: '*'
              Action:
                - s3:GetObject
              Resource: !Join
                - ''
                - - !GetAtt StaticSiteS3Bucket.Arn
                  - '/*'

    # CloudFront Distribution
    StaticSiteCloudFrontDistribution:
      Type: AWS::CloudFront::Distribution
      Properties:
        DistributionConfig:
          Aliases: []
          DefaultRootObject: index.html
          Enabled: true
          HttpVersion: http2
          Origins:
            - Id: S3Origin
              DomainName: !GetAtt StaticSiteS3Bucket.DomainName
              CustomOriginConfig:
                HTTPPort: 80
                HTTPSPort: 443
                OriginProtocolPolicy: http-only
          DefaultCacheBehavior:
            TargetOriginId: S3Origin
            ViewerProtocolPolicy: redirect-to-https
            AllowedMethods:
              - GET
              - HEAD
              - OPTIONS
            CachedMethods:
              - GET
              - HEAD
              - OPTIONS
            Compress: true
            DefaultTTL: 86400
            ForwardedValues:
              QueryString: false
              Cookies:
                Forward: none
          CacheBehaviors:
            - PathPattern: "/index.html"
              TargetOriginId: S3Origin
              ViewerProtocolPolicy: redirect-to-https
              DefaultTTL: 0
              MaxTTL: 0
              MinTTL: 0
              ForwardedValues:
                QueryString: false
                Cookies:
                  Forward: none
          CustomErrorResponses:
            - ErrorCode: 404
              ResponseCode: 200
              ResponsePagePath: /index.html
            - ErrorCode: 403
              ResponseCode: 200
              ResponsePagePath: /index.html

  Outputs:
    StaticSiteS3BucketName:
      Value: !Ref StaticSiteS3Bucket
      Description: Name of the S3 bucket for static files

    CloudFrontDistributionId:
      Value: !Ref StaticSiteCloudFrontDistribution
      Description: CloudFront Distribution ID

    CloudFrontDomainName:
      Value: !GetAtt StaticSiteCloudFrontDistribution.DomainName
      Description: CloudFront Distribution Domain Name

    WebsiteURL:
      Value: !Sub "https://${StaticSiteCloudFrontDistribution.DomainName}"
      Description: URL of the deployed website 